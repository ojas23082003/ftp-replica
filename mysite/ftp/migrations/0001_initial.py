# Generated by Django 2.2.9 on 2023-09-03 16:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=True)),
                ('is_irc', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Anu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=250, null=True)),
                ('rollno', models.CharField(max_length=10, null=True)),
                ('email', models.CharField(max_length=250, null=True)),
                ('year', models.CharField(max_length=30, null=True)),
                ('contact', models.CharField(max_length=29, null=True)),
                ('sop', models.CharField(max_length=5000, null=True)),
                ('lor1', models.FileField(blank=True, null=True, upload_to='')),
                ('lor2', models.FileField(blank=True, null=True, upload_to='')),
                ('undertaking', models.FileField(blank=True, null=True, upload_to='')),
                ('cv', models.FileField(blank=True, null=True, upload_to='')),
                ('transcript', models.FileField(blank=True, null=True, upload_to='')),
                ('pref1', models.CharField(blank=True, max_length=1000, null=True)),
                ('pref2', models.CharField(blank=True, max_length=1000, null=True)),
                ('pref3', models.CharField(blank=True, max_length=1000, null=True)),
                ('former_anu', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Anu_2022',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=250, null=True)),
                ('rollno', models.CharField(max_length=10, null=True)),
                ('email', models.CharField(max_length=250, null=True)),
                ('year', models.CharField(max_length=30, null=True)),
                ('contact', models.CharField(max_length=29, null=True)),
                ('sop', models.CharField(max_length=5000, null=True)),
                ('lor1', models.FileField(blank=True, null=True, upload_to='')),
                ('lor2', models.FileField(blank=True, null=True, upload_to='')),
                ('undertaking', models.FileField(blank=True, null=True, upload_to='')),
                ('cv', models.FileField(blank=True, null=True, upload_to='')),
                ('transcript', models.FileField(blank=True, null=True, upload_to='')),
                ('pref1', models.CharField(blank=True, max_length=1000, null=True)),
                ('pref2', models.CharField(blank=True, max_length=1000, null=True)),
                ('pref3', models.CharField(blank=True, max_length=1000, null=True)),
                ('former_anu', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('project_domain1', models.CharField(blank=True, max_length=200, null=True)),
                ('project_domain2', models.CharField(blank=True, max_length=200, null=True)),
                ('project_domain3', models.CharField(blank=True, max_length=200, null=True)),
                ('sop', models.TextField(max_length=50000, null=True)),
                ('Loi', models.TextField(blank=True, max_length=50000, null=True)),
                ('ncv', models.FileField(blank=True, null=True, upload_to='')),
                ('noc', models.FileField(blank=True, null=True, upload_to='')),
                ('reviewed', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('Pending', 'PENDING'), ('Shortlisted For Interview', 'SHORTLISTED FOR INTERVIEW'), ('Selected', 'SELECTED'), ('Rejected', 'REJECTED'), ('Not Selected', 'NOT SELECTED')], default='Pending', max_length=30)),
                ('reviewed_by', models.CharField(max_length=250, null=True)),
                ('display_prof', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dyuti',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=250, null=True)),
                ('last_name', models.CharField(max_length=250, null=True)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('gender', models.CharField(max_length=20, null=True)),
                ('country', models.CharField(max_length=500, null=True)),
                ('student_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('passport_no', models.CharField(max_length=250, null=True)),
                ('visa_no', models.CharField(max_length=250, null=True)),
                ('visa_cate', models.CharField(max_length=250, null=True)),
                ('visa_validity', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('passport_ID', models.FileField(blank=True, null=True, upload_to='')),
                ('visa_page', models.FileField(blank=True, null=True, upload_to='')),
                ('uni_india', models.CharField(max_length=500, null=True)),
                ('state', models.CharField(max_length=250, null=True)),
                ('city', models.CharField(max_length=250, null=True)),
                ('department', models.CharField(max_length=200, null=True)),
                ('year_of_study', models.CharField(max_length=50, null=True)),
                ('reg_no', models.CharField(max_length=250, null=True)),
                ('reg_ID', models.FileField(blank=True, null=True, upload_to='')),
                ('is_scholarship', models.CharField(max_length=100, null=True)),
                ('comments', models.TextField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EPFL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=250, null=True)),
                ('fullname', models.CharField(max_length=250, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('dob', models.CharField(max_length=10, null=True)),
                ('start', models.CharField(max_length=10, null=True)),
                ('end', models.CharField(max_length=10, null=True)),
                ('year', models.CharField(max_length=30, null=True)),
                ('programme', models.CharField(max_length=99, null=True)),
                ('cgpa', models.CharField(max_length=29, null=True)),
                ('duration', models.CharField(max_length=29, null=True)),
                ('sop', models.FileField(blank=True, null=True, upload_to='')),
                ('cv', models.FileField(blank=True, null=True, upload_to='')),
                ('transcript', models.FileField(blank=True, null=True, upload_to='')),
                ('pref1', models.CharField(max_length=1000, null=True)),
                ('pref2', models.CharField(max_length=1000, null=True)),
                ('pref3', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=250)),
                ('date', models.DateField(null=True)),
                ('description', models.TextField(default='', max_length=2000)),
                ('img', models.FileField(blank=True, null=True, upload_to='')),
                ('display', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FeedBack_PROF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professor_name', models.CharField(max_length=200, null=True)),
                ('university_name', models.CharField(max_length=200, null=True)),
                ('student_name', models.CharField(max_length=200, null=True)),
                ('passionate_marks', models.CharField(max_length=10, null=True)),
                ('satisfaction_marks', models.CharField(max_length=10, null=True)),
                ('ethics_marks', models.CharField(max_length=10, null=True)),
                ('creative_marks', models.CharField(max_length=10, null=True)),
                ('overall_marks', models.CharField(max_length=10, null=True)),
                ('suggestions', models.CharField(max_length=1000, null=True)),
                ('feedback', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeedBack_stu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professor_name', models.CharField(max_length=200, null=True)),
                ('Professor_email', models.CharField(max_length=200, null=True)),
                ('university_name', models.CharField(max_length=200, null=True)),
                ('student_name', models.CharField(max_length=200, null=True)),
                ('relevant_work', models.CharField(max_length=200, null=True)),
                ('supportive', models.CharField(max_length=10, null=True)),
                ('satisfied', models.CharField(max_length=10, null=True)),
                ('rate_marks', models.CharField(max_length=10, null=True)),
                ('interview', models.CharField(max_length=1000, null=True)),
                ('feedback', models.CharField(max_length=1000, null=True)),
                ('suggestions', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='gkf_appli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, null=True)),
                ('roll', models.CharField(max_length=250, null=True)),
                ('email', models.CharField(max_length=250, null=True)),
                ('contact', models.CharField(max_length=250, null=True)),
                ('student', models.CharField(max_length=250, null=True)),
                ('yearOfStudy', models.CharField(max_length=250, null=True)),
                ('department', models.CharField(max_length=250, null=True)),
                ('cgpa', models.CharField(max_length=250, null=True)),
                ('transcript', models.FileField(null=True, upload_to='')),
                ('cv', models.FileField(null=True, upload_to='')),
                ('sop', models.TextField(max_length=5500, null=True)),
                ('type', models.CharField(max_length=250, null=True)),
                ('offer_letter', models.FileField(null=True, upload_to='')),
                ('self_declaration', models.FileField(null=True, upload_to='')),
                ('noc', models.FileField(null=True, upload_to='')),
                ('durationOfVisit_from', models.CharField(max_length=1000, null=True)),
                ('durationOfVisit_to', models.CharField(max_length=1000, null=True)),
                ('hostUniversity', models.CharField(max_length=1000, null=True)),
                ('previously_funded', models.BooleanField(default=False)),
                ('funding_proof', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Hult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=250, null=True)),
                ('leader_name', models.CharField(max_length=250, null=True)),
                ('email_leader', models.EmailField(max_length=100, null=True)),
                ('contact_leader', models.CharField(max_length=29, null=True)),
                ('report', models.FileField(blank=True, null=True, upload_to='')),
                ('offline_mode_of_hult', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='HultInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('subtitle', models.CharField(blank=True, max_length=250, null=True)),
                ('desc', models.TextField()),
                ('links', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='HultPoster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='InfoLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('subtitle', models.CharField(max_length=250)),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(blank=True, max_length=5000, null=True)),
                ('date', models.DateField(null=True)),
                ('is_important', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Noticeboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(default='', max_length=250)),
                ('date', models.DateField(null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(default='', max_length=2000)),
                ('is_visible', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PreRequisite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('detail', models.TextField(max_length=5000, null=True)),
                ('pg', models.BooleanField(default=False)),
                ('ug', models.BooleanField(default=False)),
                ('year', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=200, null=True)),
                ('deadline', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, null=True)),
                ('university_name', models.CharField(max_length=99, null=True)),
                ('project_name', models.CharField(max_length=200, null=True)),
                ('project_details', models.TextField(max_length=5000, null=True)),
                ('no_of_students', models.CharField(max_length=400, null=True)),
                ('prerequisites', models.TextField(max_length=5000, null=True)),
                ('duration', models.CharField(max_length=100, null=True)),
                ('stipend', models.CharField(max_length=100, null=True)),
                ('currency', models.CharField(max_length=100, null=True)),
                ('target', models.CharField(max_length=100, null=True)),
                ('per', models.CharField(max_length=100, null=True)),
                ('mode', models.CharField(max_length=100, null=True)),
                ('skype', models.CharField(max_length=100, null=True)),
                ('imported', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=250, null=True)),
                ('department', models.CharField(max_length=99, null=True)),
                ('contact', models.CharField(max_length=29, null=True)),
                ('year', models.CharField(max_length=30, null=True)),
                ('degree_type', models.CharField(choices=[('UG', 'UG'), ('PG', 'PG')], default='UG', max_length=30)),
                ('alt_email', models.CharField(max_length=250, null=True)),
                ('passport', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('transcript', models.FileField(blank=True, null=True, upload_to='')),
                ('cgpa', models.CharField(max_length=29, null=True)),
                ('cv', models.FileField(blank=True, null=True, upload_to='')),
                ('photo', models.FileField(blank=True, null=True, upload_to='')),
                ('review', models.CharField(blank=True, max_length=30, null=True)),
                ('rollno', models.CharField(max_length=10, null=True)),
                ('selected', models.BooleanField(default=False)),
                ('updated', models.BooleanField(default=False)),
                ('viewedNotifications', models.TextField(default=',', max_length=5000)),
                ('username', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-username__is_irc'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('professor_name', models.CharField(max_length=250, null=True)),
                ('university', models.CharField(max_length=500, null=True)),
                ('project_name', models.CharField(max_length=500, null=True)),
                ('project_detail', models.TextField(max_length=5000, null=True)),
                ('project_mode', models.CharField(choices=[('On-site', 'On-site'), ('Remote', 'Remote')], default='Remote', max_length=30)),
                ('project_time', models.CharField(max_length=100, null=True)),
                ('project_image', models.FileField(blank=True, null=True, upload_to='')),
                ('display', models.BooleanField(default=False)),
                ('special', models.BooleanField(default=False)),
                ('deadline', models.DateField(null=True)),
                ('multi_domain', models.BooleanField(default=False)),
                ('reason', models.CharField(blank=True, max_length=100, null=True)),
                ('stipend', models.CharField(max_length=100, null=True)),
                ('currency', models.CharField(max_length=100, null=True)),
                ('bookmarks', models.ManyToManyField(blank=True, related_name='bookmarks', to='ftp.Profile')),
                ('prerequisite', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prof_prerequisites', to='ftp.PreRequisite')),
                ('profile', models.ManyToManyField(blank=True, related_name='project', through='ftp.Application', to='ftp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SAIP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=250, null=True)),
                ('rollno', models.CharField(max_length=10, null=True)),
                ('email', models.CharField(max_length=250, null=True)),
                ('query', models.CharField(blank=True, max_length=500, null=True)),
                ('mode_of_saip', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('funding_agency', models.CharField(max_length=250, null=True)),
                ('amount', models.CharField(max_length=500, null=True)),
                ('scholarship_name', models.CharField(max_length=500, null=True)),
                ('scholarship_detail', models.TextField(max_length=5000, null=True)),
                ('display', models.BooleanField(default=False)),
                ('deadline', models.DateField(null=True)),
                ('link', models.TextField(blank=True, max_length=5000, null=True)),
                ('bookmarks', models.ManyToManyField(blank=True, related_name='bookmarkss', to='ftp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='scholarship2k23_appli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, null=True)),
                ('roll', models.CharField(max_length=250, null=True)),
                ('email', models.CharField(max_length=250, null=True)),
                ('yearOfStudy', models.CharField(max_length=250, null=True)),
                ('cgpa', models.CharField(max_length=250, null=True)),
                ('transcript', models.FileField(null=True, upload_to='')),
                ('hasBacklog', models.BooleanField(default=False)),
                ('applying_to', models.CharField(max_length=250, null=True)),
                ('offer_letter', models.FileField(null=True, upload_to='')),
                ('hostUniversity', models.CharField(max_length=1000, null=True)),
                ('mode', models.CharField(max_length=100, null=True)),
                ('durationOfVisit_from', models.CharField(max_length=1000, null=True)),
                ('durationOfVisit_to', models.CharField(max_length=1000, null=True)),
                ('noc', models.FileField(null=True, upload_to='')),
                ('lor', models.FileField(null=True, upload_to='')),
                ('previously_funded', models.BooleanField(default=False)),
                ('funding_proof', models.FileField(blank=True, null=True, upload_to='')),
                ('project_desc', models.TextField(max_length=5500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('subTitle', models.CharField(max_length=250)),
                ('content', models.TextField()),
                ('image', models.FileField(blank=True, null=True, upload_to='')),
                ('display', models.BooleanField(default=False)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Type')),
                ('year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Year')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('sub_title', models.CharField(max_length=250)),
                ('linkedin_link', models.URLField(max_length=300)),
                ('facebook_link', models.URLField(max_length=300)),
                ('email_link', models.URLField(max_length=300)),
                ('image', models.FileField(blank=True, null=True, upload_to='')),
                ('display', models.BooleanField(default=False)),
                ('year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Year')),
            ],
        ),
        migrations.CreateModel(
            name='Scholarship_appli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, null=True)),
                ('roll', models.CharField(max_length=250, null=True)),
                ('email', models.CharField(max_length=250, null=True)),
                ('department', models.CharField(max_length=250, null=True)),
                ('yearOfGrad', models.CharField(max_length=250, null=True)),
                ('NameofFacultyAdvisor', models.TextField(max_length=50000, null=True)),
                ('NameofHOD', models.TextField(max_length=50000, null=True)),
                ('Nameofhostinstitution', models.CharField(max_length=1000, null=True)),
                ('DetailsOfTheProposedResearch_or_professionalInternship', models.CharField(max_length=5500, null=True)),
                ('sop', models.CharField(max_length=5500, null=True)),
                ('HistoryOfCollobration', models.CharField(blank=True, max_length=10000, null=True)),
                ('DurationOfVisit_from', models.CharField(max_length=1000, null=True)),
                ('DurationOfVisit_to', models.CharField(max_length=1000, null=True)),
                ('Justification_of_applying_through_the_IITKGF_Of_USA_AwardProgram', models.CharField(max_length=10000, null=True)),
                ('PossibleOutcomeOfYourProposedResearch', models.CharField(max_length=10000, null=True)),
                ('Explain_in_about_250_words_how_your_engagement_with_the_Host_Institute', models.CharField(max_length=10000, null=True)),
                ('cv', models.FileField(null=True, upload_to='')),
                ('Awards', models.FileField(blank=True, null=True, upload_to='')),
                ('Transcript', models.FileField(null=True, upload_to='')),
                ('NOC', models.FileField(null=True, upload_to='')),
                ('letter_of_endorsement', models.FileField(blank=True, null=True, upload_to='')),
                ('work_publication', models.FileField(blank=True, null=True, upload_to='')),
                ('fuding_proof', models.FileField(blank=True, null=True, upload_to='')),
                ('offer_letter', models.FileField(null=True, upload_to='')),
                ('reviewed', models.BooleanField(default=False)),
                ('display', models.BooleanField(default=False)),
                ('reviewed_by', models.CharField(blank=True, max_length=250, null=True)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Profile')),
                ('scholarship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Scholarship')),
            ],
        ),
        migrations.AddField(
            model_name='scholarship',
            name='profile',
            field=models.ManyToManyField(related_name='scholarship', through='ftp.Scholarship_appli', to='ftp.Profile'),
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Project')),
                ('result', models.ManyToManyField(blank=True, related_name='Resultss', to='ftp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='RequestedTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topicName', models.CharField(max_length=250, null=True)),
                ('count', models.IntegerField(default=0)),
                ('verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('users', models.ManyToManyField(blank=True, null=True, related_name='topics', to='ftp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='tags', to='ftp.ProjectTag'),
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=250)),
                ('image', models.FileField(blank=True, null=True, upload_to='')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Event')),
            ],
        ),
        migrations.AddField(
            model_name='application',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Profile'),
        ),
        migrations.AddField(
            model_name='application',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ftp.Project'),
        ),
    ]
